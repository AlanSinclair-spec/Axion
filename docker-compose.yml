version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hvac-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hvac_phone_agent
      POSTGRES_USER: hvacagent
      POSTGRES_PASSWORD: ${DB_PASSWORD:-hvac_secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/models/schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - hvac-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hvacagent -d hvac_phone_agent"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: hvac-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password_2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - hvac-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # HVAC Phone Agent Application
  hvac-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hvac-phone-agent
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://hvacagent:${DB_PASSWORD:-hvac_secure_password_2024}@postgres:5432/hvac_phone_agent
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password_2024}@redis:6379

      # API Keys (Set these in your .env file)
      TELNYX_API_KEY: ${TELNYX_API_KEY}
      TELNYX_PUBLIC_KEY: ${TELNYX_PUBLIC_KEY}
      VAPI_API_KEY: ${VAPI_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_jwt_key_change_this_in_production}

      # Webhook Configuration
      WEBHOOK_BASE_URL: ${WEBHOOK_BASE_URL:-https://your-domain.com}

      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    networks:
      - hvac-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: hvac-nginx
    restart: unless-stopped
    depends_on:
      - hvac-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - hvac-network
    profiles:
      - production

networks:
  hvac-network:
    driver: bridge
    name: hvac-network

volumes:
  postgres_data:
    name: hvac-postgres-data
  redis_data:
    name: hvac-redis-data